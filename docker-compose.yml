version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres-presupuestos
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Management UI: http://localhost:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  usuarioservice:
    build:
      context: ./usuarioservice
      dockerfile: Dockerfile
    container_name: usuarioservice
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./usuarioservice/.env:/app/.env
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    restart: always

  productoservice:
    build:
      context: ./productoservice
      dockerfile: Dockerfile
    container_name: productoservice
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - ./productoservice/.env:/app/.env
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    restart: always

  negocioservice:
    build:
      context: ./negocioService
      dockerfile: Dockerfile
    container_name: negocioservice
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./negocioservice/.env:/app/.env
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    restart: always

volumes:
  postgres-data:
